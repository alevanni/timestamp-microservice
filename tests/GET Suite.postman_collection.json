{
	"info": {
		"_postman_id": "15f4a2cd-b0cf-4009-91ff-33c8575a31eb",
		"name": "GET Suite",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Valid Date",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Valid Date\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"   pm.expect(jsonData.unix).to.eql(1583193600000);\r",
							"   pm.expect(jsonData.utc).to.eql(\"Tue, 03 Mar 2020 00:00:00 GMT\");\r",
							"    \r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://timestamp-microservice-for-fc.glitch.me/api/timestamp/2020-03-03",
					"protocol": "https",
					"host": [
						"timestamp-microservice-for-fc",
						"glitch",
						"me"
					],
					"path": [
						"api",
						"timestamp",
						"2020-03-03"
					]
				}
			},
			"response": []
		},
		{
			"name": "No date provided",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Your test name\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    var myDate = new Date();\r",
							"    var myJson = { unix: myDate.getTime(), utc: myDate.toUTCString() };\r",
							"    pm.expect(myJson.unix - jsonData.unix ).to.be.below(1000);\r",
							"     pm.expect(jsonData.utc).to.eql(myJson.utc);\r",
							"\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://timestamp-microservice-for-fc.glitch.me/api/timestamp/",
					"protocol": "https",
					"host": [
						"timestamp-microservice-for-fc",
						"glitch",
						"me"
					],
					"path": [
						"api",
						"timestamp",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Invalid Date",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Your test name\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.error).to.eql(\"Invalid Date\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://timestamp-microservice-for-fc.glitch.me/api/timestamp/2010-35-000",
					"protocol": "https",
					"host": [
						"timestamp-microservice-for-fc",
						"glitch",
						"me"
					],
					"path": [
						"api",
						"timestamp",
						"2010-35-000"
					]
				}
			},
			"response": []
		}
	]
}